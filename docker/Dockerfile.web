# Stage 1: Build
FROM node:22-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY packages/web/package.json ./packages/web/
COPY packages/shared/package.json ./packages/shared/

# Install dependencies
RUN npm ci

# Copy source code
COPY packages/web ./packages/web
COPY packages/shared ./packages/shared
COPY tsconfig.json ./

# Build shared types first
RUN npm run build --workspace=packages/shared

# Build web application
RUN npm run build --workspace=packages/web

# Stage 2: Production (nginx)
FROM nginx:alpine AS production

# Create non-root user
RUN addgroup -g 1001 -S nginx-custom
RUN adduser -S nginx-custom -u 1001 -G nginx-custom

# Copy built application
COPY --from=builder --chown=nginx-custom:nginx-custom /app/packages/web/dist /usr/share/nginx/html

# Copy nginx configuration
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# Switch to non-root user
USER nginx-custom

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost:3000 || exit 1

CMD ["nginx", "-g", "daemon off;"]