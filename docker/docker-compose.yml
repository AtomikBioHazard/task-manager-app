version: '3.8'

services:
  # PostgreSQL database for local development
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: task_manager_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d task_manager_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API service
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dev_user:dev_password@postgres:5432/task_manager_dev
      JWT_SECRET: dev_jwt_secret_key_change_in_production
      PORT: 3001
    volumes:
      - ../packages/api:/app/packages/api
      - ../packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev --workspace=packages/api

  # Frontend web service
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3001
    volumes:
      - ../packages/web:/app/packages/web
      - ../packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      - api
    command: npm run dev --workspace=packages/web

volumes:
  postgres_data: