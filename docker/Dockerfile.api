# Base stage with common dependencies
FROM node:22-alpine AS base

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    tini \
    wget \
    && rm -rf /var/cache/apk/*

# Copy package files
COPY package*.json ./
COPY packages/api/package.json ./packages/api/
COPY packages/shared/package.json ./packages/shared/

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 -G nodejs

# Development stage
FROM base AS development

# Install all dependencies (including dev)
RUN npm ci

# Copy source code
COPY packages/api ./packages/api
COPY packages/shared ./packages/shared
COPY tsconfig.json ./

# Change ownership to nodejs user
RUN chown -R nodejs:nodejs /app

USER nodejs

EXPOSE 3001

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost:3001/health || exit 1

# Use tini as init system
ENTRYPOINT ["/sbin/tini", "--"]

# Development command (hot reload)
CMD ["npm", "run", "dev", "--workspace=packages/api"]

# Build stage for production
FROM base AS builder

# Install all dependencies (including dev for building)
RUN npm ci

# Copy source code
COPY packages/api ./packages/api
COPY packages/shared ./packages/shared
COPY tsconfig.json ./

# Build shared types first
RUN npm run build --workspace=packages/shared

# Build API
RUN npm run build --workspace=packages/api

# Production stage
FROM base AS production

# Install only production dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy built application from builder
COPY --from=builder --chown=nodejs:nodejs /app/packages/shared/dist ./packages/shared/dist
COPY --from=builder --chown=nodejs:nodejs /app/packages/api/dist ./packages/api/dist

# Create logs directory
RUN mkdir -p /app/logs && \
    chown nodejs:nodejs /app/logs

USER nodejs

EXPOSE 3001

# Health check for production
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost:3001/health || exit 1

# Use tini as init system
ENTRYPOINT ["/sbin/tini", "--"]

# Production command
CMD ["node", "packages/api/dist/index.js"]
